---
interface Props {
    title: string;
    content: string;
    defaultOpen: boolean;
    id: number;
}

const { content, title , id, defaultOpen} = Astro.props;
---
<script>
    const questions = document.getElementsByClassName('question-toggle');
    const questionBoxList = [];
    for (const question of questions) {
        const questionId = question.getAttribute('data-id')
        const currentQuestion = document.getElementById(`question-toggle-${questionId}`)
        questionBoxList.push(currentQuestion);
    }

    questionBoxList.map(question => {
        question?.addEventListener('click', (event) => {
        
            event.preventDefault();
            const currentContent = question.querySelector('#content-toggle') as Element;
            let isOpen = question.getAttribute('data-open') == "true";
            const icon = question.querySelector('#arrow-icon-toggle') as Element;
            
            isOpen = !isOpen;
            toggleQuestionBox(currentContent, icon, isOpen);
            question.setAttribute('data-open', String(isOpen))
        })
    })
    
    
    function toggleQuestionBox(element: Element, icon: Element, isOpen: boolean) {
       if (isOpen) {
        element.classList.remove('max-h-0');
        element.classList.add('max-h-96');

        icon.classList.remove('rotate-[270deg]');
        icon.classList.add('rotate-[180deg]');
       } else {
        element.classList.remove('max-h-96');
        element.classList.add('max-h-0');

        icon.classList.remove('rotate-[180deg]');
        icon.classList.add('rotate-[270deg]');
       }
       return isOpen;
    }
</script>

<div id=`question-toggle-${id}` data-id={id} data-open={`${defaultOpen}`} class="question-toggle break-inside-avoid aspect-auto p-6 border border-gray-100 rounded-3xl bg-white dark:bg-gray-800 dark:border-gray-700 shadow-2xl shadow-gray-600/10 dark:shadow-none hover:bg-gray-50 hover:border-primary hover: dark:bg-gray-300 cursor-pointer">
		<div class="flex justify-between items-center">
		<div>
			<h6 class="text-lg font-medium text-gray-700 dark:text-white">{title}</h6>
		</div>
        <svg
            id="arrow-icon-toggle"
            width="24px"
            height="24px"
            viewBox="0 0 20 20"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            class=`${defaultOpen ? 'rotate-[180deg] ': 'rotate-[270deg] '} transition-all duration-500`
          >
            <path
                d="M4.16732 12.5L10.0007 6.66667L15.834 12.5"
                stroke="#4F46E5"
            >
            </path>
          </svg>
		</div>
	<p id="content-toggle" class=`${defaultOpen ? 'max-h-96 ': 'max-h-0 '} mt-8 transition-height duration-300 overflow-hidden`>{content}</p>
</div>