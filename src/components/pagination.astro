---
import PaginationButton from './pagination-button.astro';

interface Props {
    totalPages: number;
}

const { totalPages } = Astro.props;

const pageButtons =  [...Array(totalPages)].fill(0);
const currentPage = 1;
---
<script>
    // classe bg-purple-900 text-white
    const pagesBox = document.getElementById('pages-available');
    const numberButtons = pagesBox?.children;
    const previusButton = document.getElementById('previus-button');
    const nextButton = document.getElementById('next-button');

    for(const button of numberButtons as HTMLCollection) {
        button.addEventListener('click', (event) => {
            event.preventDefault();
            const numberSpan = button.querySelector('#page-value') as HTMLSpanElement;
            handlePageByNumber(Number(numberSpan.textContent), button as HTMLButtonElement)
            
        });
    }

    function handlePageByNumber(page: number, button: HTMLButtonElement) {
      
      const selected = button.classList.contains('selected');

      if (!selected) {
        button.classList.add('selected')
        button.classList.add('bg-primary')
        button.classList.add('text-white')
        unselectOtherPages(button.id);
      } 
    }

    function unselectOtherPages(selectedButtonId: string) {
      for (const button of numberButtons as HTMLCollection) {
        if (button.id === selectedButtonId) {
          continue;
        }
        button.classList.remove('selected')
        button.classList.remove('bg-primary')
        button.classList.remove('text-white')
      }
    }
</script>

<div class="flex items-center gap-4">
    <button disabled={currentPage <= 1}
      class=" previus-button flex items-center gap-2 px-6 py-3 font-sans text-xs font-bold text-center text-gray-900 uppercase align-middle transition-all rounded-lg select-none hover:bg-gray-900/10 active:bg-gray-900/20 disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none"
      type="button">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"
        aria-hidden="true" class="w-4 h-4">
        <path stroke-linecap="round" stroke-linejoin="round" d="M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18"></path>
      </svg>
      Previous
    </button>
    <div id="pages-available" class="flex items-center gap-2">
        {
           pageButtons.map((item, index) => (
            <PaginationButton id={index} selected={index === 0} text={index + 1}  />            
           ))
        }
    </div>
    <button
      disabled={currentPage >= totalPages}
      class="next-button flex items-center gap-2 px-6 py-3 font-sans text-xs font-bold text-center text-gray-900 uppercase align-middle transition-all rounded-lg select-none hover:bg-gray-900/10 active:bg-gray-900/20 disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none"
      type="button">
      Next
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"
        aria-hidden="true" class="w-4 h-4">
        <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3"></path>
      </svg>
    </button>
  </div> 